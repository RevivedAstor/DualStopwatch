SOLVED:
1. Fix input lag
3. Make the elapsed time count milliseconds, but leave work and rest timers as they are
- The code crashed when the language is anything but english, fix that

UNSOLVED:
- GUI or go web-based
- Add logs 
    4.1 When the stopwatch was started
    4.2 When the the current elapsed session started
    4.3 The feature to see all of your logs
- Make so that after the stopwatch is stopped, the user can see his logs
- "History"? Like, being able to see how much work was done on a certain day throughout the month or sum

Change debounce logic (maybe use release_trigger_on?)


I was thinking of using a class to store all the info in the stopwatch, but decided against it.
Maybe that idea might be good, for now version two would not have it though.

At the end, I found out that wrapping everything into a class is better due to Python 
having best lookup time for class variables than global and even local variables